@page "/DeleteEmpleado/{EmpleadoId:int}"
@inject NotificationService notificationService
@inject EmpleadoServices empleadoServices
@rendermode InteractiveAuto


<RadzenNotification />
<div class="container-fluid">
    <div class="card shadow-lg w-50 mx-auto">
        <div class="card-header">
            <h3 class="text-danger text-center"> ¿Seguro que quieres eliminar esta Empleado?</h3>
        </div>
        <div class="card-body">
            <p> AudienciaId: @empleado.EmpleadoId</p>
            <p> Fecha: @empleado.FechaCreacion</p>
            <p> Descripci&oacute;n: @empleado.Correo</p>
        </div>
        <div class="card-footer">
            <div class="btn-group">
                <a href="IndexEmpleado" class="btn btn-secondary bi bi-arrow-left-square-fill">Atr&aacute;s</a>
                <button class="btn btn-danger bi bi-trash-fill" @onclick="Eliminar">Eliminar</button>
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public int EmpleadoId { get; set; }
    public Empleados empleado { get; set; } = new Empleados();

    protected override async Task OnInitializedAsync()
    {
        // await Task.Delay(1000);
        empleado = await empleadoServices.GetEmpleado(EmpleadoId);
    }
    public async Task Eliminar()
    {
        var eliminado = empleadoServices.Delete(empleado.EmpleadoId);
        if (eliminado is null)
        {
            var mensaje = new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Error",
                    Detail = "No se ha eliminado correctamente",
                    Duration = 4_000
                };
            notificationService.Notify(mensaje);
        }
        else
        {
            var mensaje = new NotificationMessage
                {
                    Severity = NotificationSeverity.Success,
                    Summary = "Éxito",
                    Detail = "Se ha eliminado correctamente",
                    Duration = 4_000
                };
            notificationService.Notify(mensaje);
            empleado = new Empleados();
        }

    }
}
