// <auto-generated />
using System;
using FinalProject.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240323043810_a")]
    partial class a
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shared.Models.Abogados", b =>
                {
                    b.Property<int>("AbogadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AbogadoId"));

                    b.Property<int?>("ColegioAbogadoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("AbogadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Abogados");
                });

            modelBuilder.Entity("Shared.Models.Audiencias", b =>
                {
                    b.Property<int>("AudienciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AudienciaId"));

                    b.Property<int>("DemandaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAudiencia")
                        .HasColumnType("datetime2");

                    b.HasKey("AudienciaId");

                    b.HasIndex("DemandaId");

                    b.ToTable("Audiencias");
                });

            modelBuilder.Entity("Shared.Models.Demandados", b =>
                {
                    b.Property<int>("DemandadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DemandadoId"));

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DemandaId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DemandadoId");

                    b.HasIndex("DemandaId");

                    b.ToTable("Demandados");
                });

            modelBuilder.Entity("Shared.Models.Demandas", b =>
                {
                    b.Property<int>("DemandaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DemandaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("TiposDemandasId")
                        .HasColumnType("int");

                    b.HasKey("DemandaId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("TiposDemandasId");

                    b.ToTable("Demandas");
                });

            modelBuilder.Entity("Shared.Models.Empleados", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpleadoId"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpleadoId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Shared.Models.EstadosDemandas", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoId"));

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoId");

                    b.ToTable("EstadosDemandas");
                });

            modelBuilder.Entity("Shared.Models.Expedientes", b =>
                {
                    b.Property<int>("ExpedienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpedienteId"));

                    b.Property<DateTime>("FechaEntrada")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ExpedienteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Expedientes");
                });

            modelBuilder.Entity("Shared.Models.Niños", b =>
                {
                    b.Property<int>("NinoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NinoId"));

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("NinoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Niños");
                });

            modelBuilder.Entity("Shared.Models.Sentencias", b =>
                {
                    b.Property<int>("SentenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SentenciaId"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreMinisterio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResolucionId")
                        .HasColumnType("int");

                    b.HasKey("SentenciaId");

                    b.HasIndex("ResolucionId");

                    b.ToTable("Sentencias");
                });

            modelBuilder.Entity("Shared.Models.TipoResoluciones", b =>
                {
                    b.Property<int>("ResolucionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResolucionId"));

                    b.Property<string>("TipoResolcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResolucionId");

                    b.ToTable("TipoResoluciones");
                });

            modelBuilder.Entity("Shared.Models.TiposDemandas", b =>
                {
                    b.Property<int>("TiposDemandasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TiposDemandasId"));

                    b.Property<string>("TipoDemanda")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TiposDemandasId");

                    b.ToTable("TiposDemandas");
                });

            modelBuilder.Entity("Shared.Models.Usuarios", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<int>("Cedula")
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Telefono")
                        .HasColumnType("bigint");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Shared1.Detalles.ExpedientesDetalles", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleId"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DemandaId")
                        .HasColumnType("int");

                    b.Property<int>("ExpedienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("SentenciaId")
                        .HasColumnType("int");

                    b.HasKey("DetalleId");

                    b.HasIndex("DemandaId");

                    b.HasIndex("ExpedienteId");

                    b.HasIndex("SentenciaId");

                    b.ToTable("ExpedientesDetalles");
                });

            modelBuilder.Entity("Shared1.Models.EmpleadoSentencia", b =>
                {
                    b.Property<int>("EmpleadoSentenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpleadoSentenciaId"));

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("SentenciaId")
                        .HasColumnType("int");

                    b.HasKey("EmpleadoSentenciaId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("SentenciaId");

                    b.ToTable("EmpleadoSentencia");
                });

            modelBuilder.Entity("Shared.Models.Abogados", b =>
                {
                    b.HasOne("Shared.Models.Usuarios", null)
                        .WithMany("Abogados")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shared.Models.Audiencias", b =>
                {
                    b.HasOne("Shared.Models.Demandas", null)
                        .WithMany("Audiencias")
                        .HasForeignKey("DemandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shared.Models.Demandados", b =>
                {
                    b.HasOne("Shared.Models.Demandas", null)
                        .WithMany("Demandados")
                        .HasForeignKey("DemandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shared.Models.Demandas", b =>
                {
                    b.HasOne("Shared.Models.EstadosDemandas", "EstadoDemanda")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shared.Models.TiposDemandas", "TipoDemanda")
                        .WithMany()
                        .HasForeignKey("TiposDemandasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoDemanda");

                    b.Navigation("TipoDemanda");
                });

            modelBuilder.Entity("Shared.Models.Expedientes", b =>
                {
                    b.HasOne("Shared.Models.Usuarios", null)
                        .WithMany("Expedientes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shared.Models.Niños", b =>
                {
                    b.HasOne("Shared.Models.Usuarios", null)
                        .WithMany("Niños")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shared.Models.Sentencias", b =>
                {
                    b.HasOne("Shared.Models.TipoResoluciones", "TipoResoluciones")
                        .WithMany()
                        .HasForeignKey("ResolucionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoResoluciones");
                });

            modelBuilder.Entity("Shared1.Detalles.ExpedientesDetalles", b =>
                {
                    b.HasOne("Shared.Models.Demandas", "Demandas")
                        .WithMany()
                        .HasForeignKey("DemandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shared.Models.Expedientes", null)
                        .WithMany("ExpedientesDetalles")
                        .HasForeignKey("ExpedienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shared.Models.Sentencias", "Sentencia")
                        .WithMany()
                        .HasForeignKey("SentenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Demandas");

                    b.Navigation("Sentencia");
                });

            modelBuilder.Entity("Shared1.Models.EmpleadoSentencia", b =>
                {
                    b.HasOne("Shared.Models.Empleados", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shared.Models.Sentencias", "Sentencia")
                        .WithMany()
                        .HasForeignKey("SentenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Sentencia");
                });

            modelBuilder.Entity("Shared.Models.Demandas", b =>
                {
                    b.Navigation("Audiencias");

                    b.Navigation("Demandados");
                });

            modelBuilder.Entity("Shared.Models.Expedientes", b =>
                {
                    b.Navigation("ExpedientesDetalles");
                });

            modelBuilder.Entity("Shared.Models.Usuarios", b =>
                {
                    b.Navigation("Abogados");

                    b.Navigation("Expedientes");

                    b.Navigation("Niños");
                });
#pragma warning restore 612, 618
        }
    }
}
